generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  name      String?
  email     String?        @unique
  image     String?
  accounts  Account[]
  families  FamilyMember[]
  events    SpecialDay[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  access_token      String?
  refresh_token     String?
  expires_at        Int?
  scope             String?
  token_type        String?
  id_token          String?
  session_state     String?
  resourceId        String?
  channelId         String?
  webhookSecret     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Family {
  id          String         @id @default(cuid())
  name        String
  slug        String         @unique
  members     FamilyMember[]
  specialDays SpecialDay[]
  createdAt   DateTime       @default(now())
}

model FamilyMember {
  id       String @id @default(cuid())
  familyId String
  userId   String
  role     String // owner | member

  family Family @relation(fields: [familyId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([familyId, userId])
}

model SpecialDay {
  id        String   @id @default(cuid())
  familyId  String
  userId    String?
  title     String
  date      DateTime
  type      String // birthday | anniversary | custom
  source    String // manual | google | microsoft | ics
  sourceId  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  family Family @relation(fields: [familyId], references: [id], onDelete: Cascade)
  user   User?  @relation(fields: [userId], references: [id])
}
